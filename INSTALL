Required:

    - a r5rs conformant scheme interpreter, but since the base scheme
      language is rather limited for system access, a number of extra
      features are needed.  Most scheme implementation offers them in one
      or another way, so active scheme implemetations support is needed by
      Arc.  Therefor in the moment the following scheme implementations are
      supported only:

      - scm (see: http://swissnet.ai.mit.edu/~jaffer/SCM.html)

      - guile (see: http://www.gnu.org/software/guile); both versions 1.3
        and 1.4 are tested

      - ksi (see: http://www.sourceforge.net/projects/ksi)

    Arc comes with its own Scheme implementation.  This scheme interpreter,
    called Asc (Arc Scheme), is based on SCM by Aubrey Jaffer, but modified
    in a number of ways, so that it is independant from SLIB and supports a
    easier bootstrapping mechanism.  It has been tested on the following
    systems:

      i386/Linux Debian 2.2
      i386/Linux Debian 3.0
      i386/Windows 2000 with Cygwin
      i386/Windows 2000 with Mingw 2.1
      sparc/SunOS 5.8 with gcc
      alpha/Linux Debian 3.0


Installation:

    Un*x (Linux/SunOS), BeOS:

    1) ./configure

       If the configure script does not find your scheme implementation,
       you may set it using the "--scheme=" option.  The interpreter must
       be in the path.  If you want to use the included Scheme interpreter
       Asc set the option: --scheme=asc

    2) bootstrap the build system:

       ./bootstrap.sh

       This creates necessary configuration files, bash scripts and -- if
       Asc is used -- compiles the builtin Scheme interpreter.

    3) Install

       ./arc install



    Windows 95/98/NT/2000

    If you have Cygwin installed, the build is equal to that on a un*x box,
    see above.

    Without Cygwin, you need to have a mingw build environment installed in
    the moment.


