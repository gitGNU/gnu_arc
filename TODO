- c-compile: extend.  Add more compiler-flag abstractions

- java-compile: extend.  Support more compiler-flags.  Compare different
  compilers (javac, jikes, kopi, etc.) to support a generic api for all.

- implement dependency control for the java compiler.

- implement a ":depends" keyword on the "arc:deps" task.  This will make
  .dep files depend on the source files!


- add the missing cvs functions to task-cvs: add, commit, remove, tag

- design a 'task-build': this checksout a module from cvs into a temporary
  directory, calls a arcfile in this module with default task 'all'; if
  that was successfull increase a build number in that local working copy,
  check that build number in.

  needs the following tasks:

  - call arc (in another directory)
  
- need a cool way to parse settings from a arc.config file to the C
  compiler (as -Dxxx=value pairs).  Or better: generate a config.h file and
  parse in the -DHAVE_CONFIG_H key; all the settings would then be
  generated in the config.h file.  this would allow to combine arc with
  autoconf.

- strip symbols from installed binaries

- needs a nice abstraction for the deps format used by task-c-deps,
  task-flex, task-bison, task-c-deps.  In the moment the structure is
  created in each task anew ...  put this to src/deps.scm